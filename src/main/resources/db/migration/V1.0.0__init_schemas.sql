create table users (
  id bigint generated by default as identity,
  pseudo varchar(255) not null,
  email varchar(255) not null,
  full_name varchar(255) not null,
  picture varchar(255),
  created timestamp,
  last_connected timestamp,
  primary key (id),
  unique index UK_email (email ASC),
  unique index UK_pseudo (pseudo ASC)
);

create table players (
  name varchar(255) not null,
  created timestamp,
  creator_id bigint,
  user_id bigint,
  primary key (name),
  constraint FK_player_2_creator foreign key (creator_id) references users (id)
    on delete cascade,
  constraint FK_player_2_user foreign key (user_id) references users (id)
    on delete cascade
);

create table tournaments (
  id bigint generated by default as identity,
  created timestamp,
  date_time timestamp not null,
  finished timestamp,
  format integer,
  location varchar(255) not null,
  location_address varchar(255),
  name varchar(255) not null,
  started timestamp,
  state varchar(255),
  type varchar(255),
  owner_id bigint not null,
  primary key (id),
  constraint FK_tournament_2_owner foreign key (owner_id) references users (id)
    on delete cascade
);

create table decks (
  id bigint generated by default as identity,
  archetype varchar(255) not null,
  cards varchar(4000),
  created timestamp,
  format integer,
  name varchar(255) not null,
  player_id varchar(255) not null,
  primary key (id),
  constraint FK_deck_2_player foreign key (player_id) references players (name)
    on delete cascade
);

create table rounds (
  index integer not null,
  finished timestamp,
  started timestamp,
  state varchar(255) not null,
  type varchar(255),
  tournament_id bigint not null,
  rank integer,
  primary key (tournament_id, rank),
  constraint FK_round_2_tournament foreign key (tournament_id) references tournaments (id)
    on delete cascade,
);

create table matches (
  player_one_games_win integer,
  player_two_games_win integer,
  state varchar(255) not null,
  player_two_name varchar(255) not null,
  player_one_name varchar(255) not null,
  rank integer not null,
  round_rank integer not null,
  tournament_id bigint not null,
  primary key (tournament_id, round_rank, rank),
  constraint FK_match_2_player_two foreign key (player_two_name) references players (name)
    on delete cascade,
  constraint FK_match_2_player_one foreign key (player_one_name) references players (name)
    on delete cascade,
  constraint FK_match_2_round foreign key (tournament_id, round_rank) references rounds (tournament_id, rank)
    on delete cascade
);

create table participations (
  draws integer,
  game_win_percentage integer,
  losses integer,
  match_points integer,
  match_win_percentage integer,
  opponents_game_win_percentage integer,
  opponents_match_win_percentage integer,
  wins integer,
  player_id varchar(255) not null,
  tournament_id bigint not null,
  primary key (tournament_id, player_id),
  constraint FK_participation_2_tournament foreign key (tournament_id) references tournaments (id)
    on delete cascade,
  constraint FK_participation_2_player foreign key (player_id) references players (name)
    on delete cascade
);


